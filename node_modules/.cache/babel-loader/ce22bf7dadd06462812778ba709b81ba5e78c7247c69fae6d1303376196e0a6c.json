{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\todo\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState('');\n  const [month, setMonth] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Task1\",\n    date: Date.now().getDate() + \" \" + Date.now().getMonth()\n  }, {\n    id: 2,\n    title: \"Task2\",\n    date: Date.now().getDate() + \" \" + Date.now().getMonth()\n  }]);\n  const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    const newDate = new Date(Date.now());\n    setDate(newDate.getDate());\n    setDay(newDate.getDay());\n    setMonth(newDate.getMonth());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: [weekday[day], \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-normal\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-normal text-slate-400\",\n          children: months[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-normal text-slate-400\",\n          children: \"10 Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"3D0LDGAYOJoVfSEMdAtaUoGbr80=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","date","setDate","day","setDay","month","setMonth","tasks","setTasks","id","title","Date","now","getDate","getMonth","weekday","months","newDate","getDay","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/New folder/todo/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Home = () => {\r\n    const [date, setDate] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [month, setMonth] = useState('')\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            title: \"Task1\",\r\n            date: Date.now().getDate() + \" \" + Date.now().getMonth()\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Task2\",\r\n            date: Date.now().getDate() + \" \" + Date.now().getMonth()\r\n        },\r\n    ])\r\n    const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n    const months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n    useEffect(()=>{\r\n        const newDate = new Date(Date.now())\r\n        setDate(newDate.getDate())\r\n        setDay(newDate.getDay())\r\n        setMonth(newDate.getMonth())\r\n    },[])\r\n    return (\r\n        <>\r\n            <div className=\"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\">\r\n                <div className='text-lg'>\r\n                    <p className='font-semibold'>{weekday[day]}, <span className='font-normal'>{date}</span></p>\r\n                    <p className='text-sm font-normal text-slate-400'>{months[month]}</p>\r\n                </div>\r\n                <div>\r\n                    <p className='text-sm font-normal text-slate-400'>10 Tasks</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}