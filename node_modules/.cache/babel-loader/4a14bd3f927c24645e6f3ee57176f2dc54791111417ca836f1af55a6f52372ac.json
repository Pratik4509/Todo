{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\todo\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TodoContext from '../context/TodoContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState('');\n  const [month, setMonth] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Task1\",\n    date: new Date().getDate() + \" \" + new Date().getMonth()\n  }, {\n    id: 2,\n    title: \"Task2\",\n    date: new Date().getDate() + \" \" + new Date().getMonth()\n  }]);\n  const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    const newDate = new Date();\n    setDate(newDate.getDate());\n    setDay(newDate.getDay());\n    setMonth(newDate.getMonth());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: [weekday[day], \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-normal\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-normal text-slate-400\",\n          children: months[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-normal text-slate-400\",\n          children: [tasks.length, \" Tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"1cyfdJcuOeVM9GegpCLBhwvA0bQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","TodoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","date","setDate","day","setDay","month","setMonth","tasks","setTasks","id","title","Date","getDate","getMonth","weekday","months","newDate","getDay","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/New folder/todo/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TodoContext from '../context/TodoContext'\r\n\r\nconst Home = () => {\r\n    const [date, setDate] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [month, setMonth] = useState('')\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            title: \"Task1\",\r\n            date: new Date().getDate() + \" \" + new Date().getMonth()\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Task2\",\r\n            date: new Date().getDate() + \" \" + new Date().getMonth()\r\n        },\r\n    ])\r\n    const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    useEffect(() => {\r\n        const newDate = new Date()\r\n        setDate(newDate.getDate())\r\n        setDay(newDate.getDay())\r\n        setMonth(newDate.getMonth())\r\n    }, [])\r\n    return (\r\n        <>\r\n                <div className=\"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\">\r\n                    <div className='text-lg'>\r\n                        <p className='font-semibold'>{weekday[day]}, <span className='font-normal'>{date}</span></p>\r\n                        <p className='text-sm font-normal text-slate-400'>{months[month]}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='text-sm font-normal text-slate-400'>{tasks.length} Tasks</p>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}