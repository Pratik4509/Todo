{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\todo\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport TodoContext from '../context/TodoContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState('');\n  const [month, setMonth] = useState('');\n  const [tasks] = useContext(TodoContext);\n  const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const getTodos = () => {\n    console.log(tasks);\n  };\n  useEffect(() => {\n    const newDate = new Date();\n    setDate(newDate.getDate());\n    setDay(newDate.getDay());\n    setMonth(newDate.getMonth());\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n      value: {\n        tasks,\n        setTasks\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: [weekday[day], \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-normal\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-normal text-slate-400\",\n            children: months[month]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-normal text-slate-400\",\n            children: [tasks.length, \" Tasks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"skCPsC8b5b8H80sjRfj65C2JGp0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useState","TodoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","date","setDate","day","setDay","month","setMonth","tasks","weekday","months","getTodos","console","log","newDate","Date","getDate","getDay","getMonth","children","Provider","value","setTasks","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/New folder/todo/src/components/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport TodoContext from '../context/TodoContext'\r\n\r\nconst Home = () => {\r\n    const [date, setDate] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [month, setMonth] = useState('')\r\n    const [tasks] = useContext(TodoContext)\r\n    const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const getTodos = () => {\r\n        console.log(tasks)\r\n    }\r\n    useEffect(() => {\r\n        const newDate = new Date()\r\n        setDate(newDate.getDate())\r\n        setDay(newDate.getDay())\r\n        setMonth(newDate.getMonth())\r\n        getTodos()\r\n    }, [])\r\n    return (\r\n        <>\r\n        <TodoContext.Provider value={{tasks, setTasks}}>\r\n                <div className=\"container max-w-md mx-auto mt-10 rounded-lg shadow-md bg-slate-100 text-purple-600 p-6 flex justify-between items-center\">\r\n                    <div className='text-lg'>\r\n                        <p className='font-semibold'>{weekday[day]}, <span className='font-normal'>{date}</span></p>\r\n                        <p className='text-sm font-normal text-slate-400'>{months[month]}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='text-sm font-normal text-slate-400'>{tasks.length} Tasks</p>\r\n                    </div>\r\n                    {/* <ul>\r\n                        {tasks.map(task =>{return(\r\n                            <li>{task.title}</li>\r\n                        )} )}\r\n                    </ul> */}\r\n                </div>\r\n        </TodoContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}